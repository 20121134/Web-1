
<IsisScript name="identifyLangs">
	<function name="getCommonData" action="replace" tag="4000" split="occ">
		<field action="import" tag="list">880</field> 
		<call name="getTitleData">1</call>
		<call name="getIssueData">1</call>
		<field action="export" tag="list">350,4001</field>
		
	</function>
	
	<function name="getTitleData" action="replace" tag="4000" split="occ">
		<!-- 4000 = 'yes' -->
		<field action="import" tag="list">880</field> 

		<field action="replace" tag="350" split="occ"><pft>ref(['TITLE']l(['TITLE'],'LOC=',v880*1.9),(v350/))</pft></field>

		<!-- Get the lowercase siglum of the serial -->
		<field action="replace" tag="68">
			<pft>
			ref(['TITLE']l(['TITLE'],'LOC=',mpu,v880*1.9,mpl),v68),			
			</pft>
		</field>


		<field action="export" tag="list">68,350</field>
		
	</function>
	
	<function name="getIssueData" action="replace" tag="4000" split="occ">
		<!-- 4000 = 'yes' -->
		<field action="import" tag="list">68,880</field> 

		
		<!-- Gets the volumn number, issue number and supplement number -->
		<field action="replace" tag="4003">
			<pft>
				ref( ['NEWISSUE'] l( ['NEWISSUE'],'Y',v880*1.17) ,
					"v"v31,"n"v32,"s"v131,"s"v132 )
			</pft>
		</field>
		<field action="replace" tag="4001">
			<pft>
				v68|/|,
				v4003|/|
			</pft>
		</field>

		<field action="export" tag="list">4001,4003</field>
		
	</function>
	
	<function name="getFilePathAndName" action="replace" tag="4000" split="occ">
	<!--
		 4000^d - directory	 
		 4000^t - pdf ou tr (translation)	 
		 -->
		 <!--display><pft>ALL</pft></display-->	
		<field action="import" tag="list">4001,4799</field> 

		<field action="replace" tag="4002"><pft>v4000^t</pft></field>
		<field action="replace" tag="4005"><pft>if v4000^t='pdf' then v4000^t fi</pft></field>
	   
		<field action="replace" tag="4500">
			<pft>
				'^d'v4000^d,'^s',v4001
			</pft>
		</field>

		<field action="replace" tag="4799">
			<pft>
				if v4005<>'' then
					mid(v4799,1,instr(v4799,'.')),
					,v4005
				else 
					v4799,
				fi
			</pft>
		</field>

		<field action="export" tag="list">4799,4500</field>
		
	</function>
	
	<function name="checkTextLang" action="replace" tag="4001" split="occ">
		<!--
		 4001^d - directory	
		 4001^s - subdir
		 4001^f - file
		 4001^l - lang which can not be part of file name (optional)
		 -->
		 
		<field action="import" tag="list">350,40</field>

		<!-- Verify the presence of the files. The full path is compounded by the 
			base path and relative path.
		-->
		<list action="load" type="freq"><pft>(v350/)</pft></list>
		<do task="list">
			 <field action="define" tag="5001">Isis_Current</field>
			 <field action="define" tag="5002">Isis_Item</field>>
			
			<loop>
				<field action="import" tag="list">4001,4100,40</field>
				<flow action="skip"><pft>if v4001^l=v5002 then 'Next' fi</pft></flow>
				<field action="replace" tag="5010">
					<pft>
					
						 if p(v4001^d) and p(v4001^s) and p(v4001^f) then 
							'^d',v4001^d,
							,'^f',v4001^s,
							if v5002<>v40 then
								v5002|_|,
							fi,
							v4001^f,
							'^l',v5002
						 fi 
					
					</pft>
				</field>
				
				<field action="statusfile" tag="5003">
					<pft>
						if p(v5010) then
							if instr(v4001, '\') > 0 then 
								replace(s(v4001^d,v5010^f),'/','\')
							else
								s(v4001^d,v5010^f)
							fi
						fi
					</pft>
				</field>
				<field action="add" tag="4100"><pft>if v5003^s : 'e' then v5010 fi</pft></field>
				<field action="export" tag="list">4001,4100</field>
			</loop>
		</do>
		<list action="delete">now</list>
		<field action="export" tag="7999">4100</field>
		
	</function>
	
	<function name="update" action="replace" tag="4000" split="occ">
		<field action="import" tag="list">880,40,83,601,602,799,3000,700</field> 

		<!--field action="replace" tag="3000"><pft>f(l([v4000],v880),1,0)</pft></field--> 
		<do task="update">
			<parm name="db"><pft>v4000</pft></parm>
			<parm name="mfn"><pft>if val(v3000)>0 then v3000 else 'New' fi</pft></parm>
			<!--parm name="fst"><pft>cat(v4000|.fst|)</pft></parm-->
			<parm name="lockid"><pft>if val(v3000)>0 then '1' fi</pft></parm>

			<field action="define" tag="1102">Isis_Status</field>
			<field action="define" tag="1103">Isis_Lock</field>

			<update>
				<field action="import" tag="list">880,40,83,601,602,799,700</field> 
				<field action="replace" tag="91"><pft>date</pft></field>
				<write>Unlock</write>
			</update>
		</do>
		<file action="close" type="database"><pft>v4000</pft></file>
	</function>

	<function name="checkRecord" action="replace" tag="4000" split="occ">
		<field action="import" tag="list">880,40,83,601,602,4799,4800</field> 
		<field action="replace" tag="799"><pft>v4799</pft></field> 

		<field action="replace" tag="3000"><pft>f(l([v4000],v880),1,0)</pft></field> 
		<field action="replace" tag="3001"><pft>if val(v3000)>0 then v3000 else 'New' fi</pft></field> 

		<flow action="jump"><pft>if v3001='New' then 'SAVE' fi</pft></flow>

		<label>CHECK</label>
		<field action="replace" tag="6799"><pft>v4799</pft></field> 
		<field action="replace" tag="6880"><pft>v880</pft></field> 
		<field action="replace" tag="6040"><pft>v40</pft></field> 
		<field action="replace" tag="6083" split="occ"><pft>(v83/)</pft></field> 
		<field action="replace" tag="6601" split="occ"><pft>(v601/)</pft></field> 
		<field action="replace" tag="6602" split="occ"><pft>(v602/)</pft></field> 

		<do task="mfnrange">
			<parm name="db"><pft>v4000</pft></parm>
			<parm name="from"><pft>v3001</pft></parm>
			<parm name="count">1</parm>

			<field action="define" tag="1102">Isis_Status</field>
			<field action="define" tag="1103">Isis_Lock</field>

			<loop>
				<field action="import" tag="list">6880,6040,6083,6601,6602,6799,4800</field> 

				<field action="add" tag="6000"><pft>if v880<>v6880 then '[880] does not match: '/,v880/,v6880/ fi</pft></field> 
				<field action="add" tag="6000"><pft>if v799<>v6799 then '[799] does not match: '/,v799/,v6799/ fi</pft></field> 

				<flow action="skip"><pft>if v6880<>v880 or v6779<>v799 then 'Next' fi</pft></flow>

				<field action="replace" tag="5000"><pft>(v83| |)</pft></field> 
				<field action="add" tag="6000"><pft>(if instr(v5000[1],v6083)=0 then '[083] does not match: '/,v5000[1]/,v6083/ fi)</pft></field> 

				<field action="replace" tag="5000"><pft>(v601| |)</pft></field> 
				<field action="add" tag="6000"><pft>(if instr(v5000[1],v6601)=0 then '[601] does not match: '/,v5000[1]/,v6601/ fi)</pft></field> 

				<field action="replace" tag="5000"><pft>(v602| |)</pft></field> 
				<field action="add" tag="6000"><pft>(if instr(v5000[1],v6602)=0 then '[602] does not match: '/,v5000[1]/,v6602/ fi)</pft></field> 

				<field action="add" tag="6000"><pft>if p(v6000) then v91/,date,# fi</pft></field> 

				<flow action="skip"><pft>if nocc(v6000)>0 then 'Next' fi</pft></flow>

				<call name="update"><pft>v4800</pft></call>

				<field action="export" tag="list">6000</field> 

			</loop>
		</do>

		<field action="replace" tag="700" split="occ"><pft>(v6000/)</pft></field> 

		<file action="close" type="database"><pft>v4000</pft></file>

		<label>SAVE</label>
		<call name="update"><pft>v4000</pft></call>

		<label>END</label>
	</function>

	<section>
		<field action="cgi" tag="7001">acron</field>
		<field action="cgi" tag="7002">issue</field>
		<field action="cgi" tag="9000">LANG_DB</field>

		<field action="cgi" tag="3010">debug</field>
		<field action="cgi" tag="3011">def</field>
		<trace><pft>v3010</pft></trace>

		<flow action="jump">
			<pft>
				if a(v7001) then 
					,'error_missing_parameters', 
				fi 
				if a(v3011) then 'error_missing_parameters' fi
			</pft>
		</flow>


		<field action="replace" tag="8000" split="occ"><pft>cat(v3011)</pft></field>
		<proc>
		<pft>
			'd8001d8002d8003d8004d8005d8006d8007d8008d8009'
			(
				if instr(v8000,'=') > 0 then

					select left(v8000, instr(v8000, '=') - 1)
						case 'TITLE'      : 'a8001{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'NEWISSUE'   : 'a8002{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'PDF_PATH'        : 'a8003{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'TRANSLATION_PATH': 'a8004{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'SO': 'a8005{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'BASES-WORK_PATH': 'a8006{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'CTRL': 'a8008{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
						case 'LANG_DATABASE_PATH': 'a8009{',mid(v8000,instr(v8000, '=')+1,size(v8000)),'{',
					endsel
				fi
			)
		</pft>
		</proc>

		<flow action="jump"><pft>if a(v8001) or a(v8002) or a(v8003) or a(v8004) or a(v8005) or a(v8006) or a(v8008) or a(v8009) then 'error_in_def_file' fi</pft></flow>

		<!-- base do acron em bases-work, ex: bases-work/bjmbr/bjmbr -->
		<field action="replace" tag="3001"><pft>v8006,v7001|/|,v7001</pft></field>

		<field action="statusdb" tag="1091"><pft>v3001</pft></field>
		<flow action="jump">
			<pft>if v1091^s : 'm' then else 'error_missing_database' fi</pft>
		</flow>

		<field action="replace" tag="3002"><pft>'h=',if a(v7002) then '$' else v7002 fi</pft></field>
		<field action="replace" tag="3005"><pft>'^d'v8009,'^a'v7001,'^i'v7002,'^r'v8007</pft></field>

		<parm name="cipar">
			<pft>
				'TITLE.*=',     v8001,'.*',/
				'NEWISSUE.*=',  v8002,'.*',/
			</pft>
		</parm>


		
		<call name="getTitleData">1</call>

		<do task="search">
			<parm name="db"><pft>v3001</pft></parm>
			<parm name="expression"><pft>v3002</pft></parm>

			<loop>
				<!-- 222: era ex-ahead -->
				<flow action="skip"><pft>if p(v222) then 'Next' fi</pft></flow>

				<field action="import" tag="list">68,350</field> 
				<field action="import" tag="list">3001</field> 
				<field action="import" tag="list">9880</field> 
				<field action="import" tag="list">8003/8004,9000</field> 

				<!-- se eh o mesmo issue nao precisa obter os dados novamente -->
				<call name="getIssueData"><pft>if v9880<>v880*1.17 then '1' fi</pft></call>
				<field action="replace" tag="9880"><pft>if v9880<>v880*1.17 then v880*1.17 fi</pft></field>


				<field action="replace" tag="83" split="occ"><pft>(v83^l/)</pft></field>
				<field action="replace" tag="4799">
					<pft>
						replace(replace(ref(mfn-1,v799),'.HTML','.html'),'.HTM','.htm')
					</pft>
				</field>

				<call name="getFilePathAndName"><pft>'^d'v8004,'^ttr'</pft></call>
				<call name="checkTextLang"><pft>v4500,'^f',v4799,'^l'v40</pft></call>
				<field action="replace" tag="601" split="occ"><pft>(v7999/)</pft></field>

				<call name="getFilePathAndName"><pft>'^d'v8003,'^tpdf'</pft></call>
				<call name="checkTextLang"><pft>v4500,'^f',v4799,</pft></call>
				<field action="replace" tag="602" split="occ"><pft>(v7999/)</pft></field>

				<call name="checkRecord"><pft>v9000</pft></call>

				<field action="export" tag="list">9880</field>
				
			</loop>
		</do>		
		
		<flow action="jump">end</flow>


		<label>error_missing_database</label>
		<display><pft>'Error: database ',if p(v9000) then v9000' could not be created. Check permissions.' else v3001' does not exist.' fi/</pft></display>
		<flow action="jump">end</flow>

		<label>error_missing_parameters</label>
		<display><pft>'Example:'/</pft></display>
		<display><pft>'../cgi-bin/wxis.exe IsisScript=proc_langs/process_texts.xis def=proc_langs/text-langs.def acron=$1 issue=$2 debug=$3 LANG_DB=$4'/</pft></display>
		<display><pft>if a(v7001) then 'Missing parameter: acron'/ fi</pft></display>
		<display><pft>if a(v3011) then
					'Inform the def file which contains the paths information'/
				fi</pft></display>

		<flow action="jump">end</flow>

		<label>error_in_def_file</label>
		<display><pft>'Error in proc/proc_langs/text-langs.def:'/</pft></display>
		
		<display><pft>if a(v8001) then 'Missing TITLE. Ex.: TITLE=/home/scielo/www/bases-work/title/title'/ fi</pft></display>
		<display><pft>if a(v8002) then 'Missing NEWISSUE. Ex.: NEWISSUE=/home/scielo/www/bases-work/newissue/newissue'/ fi</pft></display>
		<display><pft>if a(v8003) then 'Missing PDF_PATH. Ex.: PDF_PATH=/home/scielo/www/bases/pdf/'/ fi</pft></display>
		<display><pft>if a(v8004) then 'Missing TRANSLATION_PATH. Ex.: TRANSLATION_PATH=/home/scielo/www/bases/translation/'/ fi</pft></display>
		<display><pft>if a(v8005) then 'Missing SO. Ex.: SO=windows'/ fi</pft></display>
		<display><pft>if a(v8006) then 'Missing BASES-WORK_PATH. Ex.: BASES-WORK_PATH=/home/scielo/www/bases-work/'/ fi</pft></display>
		<!-- display><pft>if a(v8007)  or (v8007<>'lang' and v8007<>'acron/lang' and v8007<>'acron/issue/lang') then 
		'Missing LANG_DB_NAME_FORMAT or invalid values.'/,
		'Values accepted for rule: lang or acron/lang or acron/issue/lang'/,
					'lang to create a database named as lang'/
					'acron/lang to create a database named as <acron>/lang'/
					'acron/issue/lang to create a database named as <acron>/<issue>/lang'/
					fi</pft></display-->
		<display><pft>if a(v8008) then 
		'Missing CONTROL_DB. Ex: /home/scielo/www/bases-work/lang/control'/,
					fi</pft></display>
		<display><pft>if a(v8009) then 
		'Missing LANG_DATABASE_PATH. Ex: /home/scielo/www/bases-work/'/,
					fi</pft></display>


		
		<flow action="jump">end</flow>

		<label>end</label>
	</section>
	
</IsisScript>